group 'edu.wpi.cs3733d19.teamF.Hospital' // replace with your package name
version '0.1'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

mainClassName = "Main" // replace with your main class

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
//    google()
    mavenCentral()
    jcenter()
    maven {
        url "https://dl.bintray.com/jerady/maven"
    }
    maven {
        url 'https://nexus.gluonhq.com/nexus/content/repositories/releases'
    }
    maven {
        url 'https://jitpack.io'
    }
//    maven {
//        url 'https://dl.bintray.com/android/android-tools'
//    }
}

// You'll need to create an integration-test folder with the same structure as your test or main folders
sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

// This will be the name of the task that you'll run to do only your integration tests
task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

dependencies {

    testCompile(
            [group: 'junit', name: 'junit', version: '4.12'],
            [group: 'com.jfoenix', name: 'jfoenix', version: '8.0.3'],
            [group: 'org.apache.derby', name: 'derby', version: '10.11.1.1'],
            [group: 'org.apache.derby', name: 'derbyclient', version: '10.11.1.1'],
            [group: 'org.apache.derby', name: 'derbytools', version: '10.11.1.1'],
            [group: 'de.jensd', name: 'fontawesomefx-commons', version: '8.15'],
            [group: 'de.jensd', name: 'fontawesomefx-fontawesome', version: '4.7.0-11'],
            [group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.6.1'],
            [group: 'com.opencsv', name: 'opencsv', version: '4.5'],
            [group: 'org.kordamp.ikonli', name: 'ikonli-swing', version: '11.1.0'],
            [group: 'com.github.jaytaylor', name: 'jaws', version: '1.3.1'],
            [group: 'net.lingala.zip4j', name: 'zip4j', version: '1.3.2'],
            [group: 'org.jfxtras', name: 'jfxtras-icalendaragenda', version: '8.0-r6']
    )

    compile(
            [group: 'javax.mail', name: 'mail', version: '1.4.7'],
            [group: "com.twilio.sdk", name: "twilio", version: "7.37.0"],
            [group: 'de.jensd', name:'fontawesomefx-commons', version: '8.15'],
            [group: 'junit', name: 'junit', version: '4.12'],
            [group: 'com.jfoenix', name: 'jfoenix', version: '8.0.3'],
            [group: 'org.apache.derby', name: 'derby', version: '10.11.1.1'],
            [group: 'org.apache.derby', name: 'derbyclient', version: '10.11.1.1'],
            [group: 'org.apache.derby', name: 'derbytools', version: '10.11.1.1'],
            [group: 'de.jensd', name: 'fontawesomefx-commons', version: '8.11'],
            [group: 'de.jensd', name: 'fontawesomefx-fontawesome', version: '4.7.0-5'],
            [group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.6.1'],
            [group: 'com.opencsv', name: 'opencsv', version: '4.5'],
            [group: 'com.gluonhq', name: 'charm-glisten', version: '4.4.2'],
            [group: 'org.kordamp.ikonli', name: 'ikonli-swing', version: '11.1.0'],
            [group: 'com.github.jaytaylor', name: 'jaws', version: '1.3.1'],
            [group: 'net.lingala.zip4j', name: 'zip4j', version: '1.3.2'],
            [group: 'net.kurobako', name: 'gesturefx', version: '0.3.0'],
            [group: 'org.jfxtras', name: 'jfxtras-icalendaragenda', version: '8.0-r6'],
            [group: 'com.calendarfx', name: 'view', version: '8.5.0'],
            [group: 'com.google.firebase', name:'firebase-admin', version:'6.8.0']
    )
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

// This allows your tests to be run multiple times in a row without needing to change the files
test {
    outputs.upToDateWhen { false }
}

// This allows the jar to be created, it appears in the build/libs folder
jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    from configurations.runtime.collect { zipTree(it) }
}