/**
 * @brief Class for implementing internal transportation requests.
 */

package models.services;

import models.map.Location;
import models.user.User;
import java.sql.Timestamp;
import java.util.Date;

public class TransportationRequest extends ServiceRequest implements Comparable<TransportationRequest> {

    Location destination;   // Destination of transportation

    /**
     * @brief Constructs new transportation request to add to database.
     * @param location Location of the request
     * @param destination Destination of the request
     * @param description Textual description of request
     * @param requester Employee who made request
     */
    public TransportationRequest(
            Location location,
            Location destination,
            String description,
            User requester)
    {
        super(
                0, location, Status.INCOMPLETE, description,
                requester, new Timestamp(new Date().getTime()),
                null, null, null
        );
        this.destination = destination;
    }

    /**
     * @brief Constructs transportation request with all fields.
     * @param requestID Request ID (generated by database)
     * @param location Origin location of the request
     * @param destination Destination of the request
     * @param status Status of request
     * @param description Textual description of request
     * @param requester Employee who made request
     * @param requestTime Time request was made
     * @param servicer Employee who fulfilled the request
     * @param claimedTime Time service was claimed by an employee
     * @param completedTime Time service was marked completed
     */
    public TransportationRequest(
            int requestID,
            Location location,
            Location destination,
            Status status,
            String description,
            User requester,
            Timestamp requestTime,
            User servicer,
            Timestamp claimedTime,
            Timestamp completedTime) {
        super(
                requestID, location, status, description,
                requester, requestTime,
                servicer, claimedTime, completedTime
        );
        this.destination = destination;
    }

    /**
     * Attribute getters
     */
    public Location getDestination() {
        return destination;
    }

    /**
     * @brief Compares transportation requests based on request time (default).
     */
    public int compareTo(TransportationRequest request) {
        return requestTime.compareTo(request.requestTime);
    }
}
